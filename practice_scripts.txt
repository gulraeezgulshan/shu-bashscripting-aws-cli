-----------------------------------------------------------------
1) Must be root user to continue the script
-----------------------------------------------------------------
#!/bin/bash

ROOT_UID=0     # Only users with $UID 0 have root privileges.
E_NOTROOT=100  # Non-root exit error.

if [ "$UID" -ne "$ROOT_UID" ]
then
  echo "Must be root to run this script."
  exit $E_NOTROOT
fi  

-----------------------------------------------------------------
2) Check whether command line arguements present or not
------------------------------------------------------------
#!/bin/bash

LINES=50       # Default value

if [ -n "$1" ]
then
  lines=$1
  echo "$lines"
else  
  lines=$LINES
  echo "$lines" 
fi  
------------------------------------------------------------
3) Log Cleanup program
-----------------------------------------------------------
#!/bin/bash

LOG_DIR=/var/log
ROOT_UID=0     # Only users with $UID 0 have root privileges.
LINES=50       # Default number of lines saved.
E_XCD=86       # Can't change directory?
E_NOTROOT=87   # Non-root exit error.

# Run as root
if [ "$UID" -ne "$ROOT_UID" ]
then
  echo "Must be root to run this script."
  exit $E_NOTROOT
fi  

# Test whether command-line argument is present
if [ -n "$1" ]
then
  lines=$1
else  
  lines=$LINES # Default, if not specified on command-line.
fi  

cd $LOG_DIR

if [ `pwd` != "$LOG_DIR" ]  
                            
then
  echo "Can't change to $LOG_DIR."
  exit $E_XCD
fi  

# Another way to write the above
#
# cd /var/log || {
#   echo "Cannot change to necessary directory."
#   exit $E_XCD;
# }


tail -n $lines messages > mesg.temp # Save last section of message log file.
mv mesg.temp messages               # Rename it as system log file.

cat /dev/null > wtmp  
echo "Log files cleaned up."


exit 0
--------------------------------------------------------------------------
4) Running a loop in the background
------------------------------------------------------------------------
#!/bin/bash

for i in 1 2 3 4 5 6 7 8 9 10           
do
  echo -n "$i "
done & 

--------------------------------------------------------------------------
5) Backup of files changed in last day
---------------------------------------------------------------------------
